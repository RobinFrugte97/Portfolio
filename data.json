[{"name":"Project-spotify","description":"A personal project using multiple datasets and D3. An interactive network graph that links Spotify tracks to countries. Discover the differences in music taste and traditions throughout the year between countries!","url":"https://github.com/RobinFrugte97/Project-spotify","homepageUrl":"","primaryLanguage":{"name":"JavaScript","color":"#f1e05a"},"languages":{"nodes":[{"name":"HTML","color":"#e34c26"},{"name":"JavaScript","color":"#f1e05a"},{"name":"CSS","color":"#563d7c"}]},"openGraphImageUrl":"https://repository-images.githubusercontent.com/232086271/3b31e980-a104-11eb-9d6f-8b2f8ebef386","updatedAt":"2021-05-25T10:16:23Z","object":{"text":"# Project Spotify\n\nThis will be a personal project of mine, exploring and combining fun datasets. The goal is to create an interactive datavisualisation with [D3](d3js.org).\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Project-spotify/master/src/images/readmess.png)\n\n## Concept\n\nThe concept an interactive network graph that links Spotify tracks to countries. Different countries are to be compared to see how these countries differ. A dataset of holidays is added to the combination to see if the holidays are an influence to the music choice of the country.\n\nThe user can select two different countries to compare. The user can also select which date they would like to see displayed. If a user wants to compare songs, they can click on the tracks circles to have the bound information displayed.\n\n## Wiki\n\nMore about this project can be read here: [Wiki](https://github.com/RobinFrugte97/Project-spotify/wiki)\n\n## List of datasets\n\nThis is a list of the datasets currently in use:\n\n- [Worldwide top spotify songs per county, per day of 2017](https://www.kaggle.com/edumucelli/spotifys-worldwide-daily-song-ranking)\n- [Top spotify songs of 2017 more detail](https://www.kaggle.com/nadintamer/top-tracks-of-2017)\n\n\nI will be using a dataset containing the top 100 spotify songs for each day of 53 countries, for a year long.\nFor this project I will pick 10 different countries with as much difference in geographical location and culture between them.\nThe list of countries I will use in this application:\n- Austria (at)\n- Ecuador (ec)\n- Hong Kong (hk)\n- Finland (fi)\n- Latvia (lv)\n- Italy (it)\n- Japan (jp)\n- Netherlands (nl)\n- New Zealand (nz)\n- Turkey (tr)\n\n## Usage\n\nBecause of the size of the data I have left the sets out of the package. They can be downloaded through the provided links above. \n\nThe application can be run by running `ìndex.html`.\n\nA repo named \"Data\" is required in the root of the application, containing all the downloaded datasets.\n\n\n## Dependancies\n\nThere are no dependancies required. [Nodemon](https://www.npmjs.com/package/nodemon) was used for local developement, aswell as a local server.js file to serve the `index.html` file.\n"}},{"name":"Verhalenvanger","description":"A platform for the Scheepvaartmuseum where visitors can share stories and memories with others.","url":"https://github.com/RobinFrugte97/Verhalenvanger","homepageUrl":"https://www.verhalenvanger-hetscheepvaartmuseum.nl/","primaryLanguage":{"name":"JavaScript","color":"#f1e05a"},"languages":{"nodes":[{"name":"JavaScript","color":"#f1e05a"},{"name":"EJS","color":"#a91e50"},{"name":"SCSS","color":"#c6538c"}]},"openGraphImageUrl":"https://repository-images.githubusercontent.com/138919017/af6a8e00-a100-11eb-8030-951bbc8de02f","updatedAt":"2021-05-25T10:17:30Z","object":{"text":"# Logboek Robin\n\n- [De opdracht](#de-opdracht)\n- [Persoonlijke doelen](#persoonlijke-doelen)\n- [Waar heb ik aan gewerkt](#waar-heb-ik-aan-gewerkt)\n\t- [Gemaakte/gestylede componenten](#gemaakte/gestylede-componenten)\n\t- [Aan meegewerkt/een gedeelte gemaakt](#aan-meegewerkt/een-gedeelte-gemaakt)\n- [Waar ben ik trots op](#waar-ben-ik-trots-op)\n\t- [Components semantisch opbouwen](#components-semantisch-opbouwen)\n\t- [Inclusiveness fix in de Intersection Observer](#inclusiveness-fix-in-de-intersection-observer)\n\t- [Code in functions](#code-in-functions)\n- [Wat heb ik geleerd](#wat-heb-ik-geleerd)\n\t- [Functions gebruiken](#functions-gebruiken)\n\t- [Inclusive design](#inclusive-design)\n\t- [SCSS](#scss)\n- [Conclusie meesterproef](#conclusie-meesterproef)\n\n## De opdracht\n\nVoor het Scheepvaartmuseum maken we een user-generated verhalen site over het schip 'de Oranje'. Mensen moeten hun verhaal kunnen delen met de mogelijkheid om media toe te voegen zoals foto's, video's en geluidfragmenten. Deze verhalen moeten terug te vinden zijn op een overzichtpagina. Gebruikers van de site moeten ook reacties achter kunnen laten op vehalen.\n\n## Design challenge\n\nHoe kunnen wij de website zo aantrekkelijk mogelijk maken voor de gebruiker, zodat de gebruiker zich uitgenodigd voelt om zijn/haar eigen verhaal achter te laten om een user-generated verhalen site draaiend te houden? Hoe nodigen we gebruikers uit verhalen te lezen?\n\n\n## Getting Started\n\nOm met dit project van start te gaan moet je eerst deze repository overzetten naar je locale machine met `git clone`.\n\nDaarna:\n\n```js\nyarn install\n```\n\nOm te beginnen met developen:\n\n```js\nyarn run start\n```\n\nOm de code op te bouwen:\n\n```js\nyarn run build\n```\n\n## Persoonlijke doelen\n\n- Betere JavaScript schrijven\n- Modulaire JavaScript schrijven\n- Inclusive design\n- Schonere CSS & een nieuwe CSS extension\n\n\n## Waar heb ik aan gewerkt\n\n### Gemaakte/gestylede Componenten:\n\n- Detailpagina verhaal\n\t- Detailpagina video component\n\t- Detailpagina tekst component\n\t- Detailpagina audio component\n\t- Detailpagina tags component\n\t- Detailpagina foto component\n- Verhaaldeel toevoeg buttons\n- Call to action verhaal pagina en homepagina\n- Uploadpagina video preview\n- Implementatie Intersection Observer\n\n![](https://raw.githubusercontent.com/RobinFrugte97/meesterproef-scheepvaartmuseum/master/gridcards.png)\n\n### Aan meegewerkt/een gedeelte gemaakt:\n\n- Overzichtpagina layout\n- Verhaal blokken op overzichtpagina en homepagina\n- Uploadpagina foto en audio upload preview\n- Intersection Observer\n\n## Waar ben ik trots op\n\n### Components semantisch opbouwen\n\nIn dit project hebben we alles opgedeeld in componenten. Elke pagina en elk deel van de pagina is opgedeeld in componenten, zodat we het werk goed kunnen verdelen onder 6 man.\n\nUit het code-review gesprek met Joost bleek dat ik te veel nutteloze `div` elementen om alle componenten heen had gezet, waardoor het én niet semantisch, én niet inclusive was.\nNa het gesprek heb ik alle overbodige `div` elementen om de componenten weggehaald. De reden dat de `div` elementen om de componenten heen stonden was styling. Het was heel makkelijk om\nalle componenten uit te lijnen met de `div` elementen met dezelfde `class` om elk component zetten om zo het geheel te stylen. Ik had daarbij niet nagedacht over de semantiek en mensen\ndie hulptools gebruiken zoals screenreaders.\n\nNa het gesprek met Joost ben ik gelijk aan de gang gegaan. Ik heb alle overbodige styling elementen verwijderd en de correcte elementen de juiste styling meegegeven.\nIk heb mijn best gedaan om de componenten semantisch te krijgen. In het vervolg van het project ben ik meer gaan kijken naar de semantiek van componenten waar ik mee te maken kreeg.\n\nVakken toegepast:\n- WAFS\n- CSSTTR\n- Browser technologies\n\nMeer code en context:\n\n[Link naar de bijbehoordende commit](https://github.com/moniac/meesterproef-scheepvaartmuseum/pull/74/commits/303bb7c1aafd17384ae26c452072275046f2a162)\n\n### Inclusiveness fix in de Intersection Observer\n\nOp de detailpagina hadden we het idee om elk verhaal deel met een animatie te visualiseren. Daarvoor hebben we voor de Intersection Observer gekozen. De Intersection Observer is zo gebouwd dat we alle componenten er één voor één in kunnen zetten. Jamie heeft daarmee iets super tofs neergezet.\n\nWanneer de Intersection Observer klaar was om in de verhaal pagina's te zetten, bleek dat alle componenten in een aantal containers gezet moesten worden. Het viel mij gelijk op, omdat ik daarvoor ook al bezig was met de semantiek van de individuele componenten. Ik heb met JavaScript de code omgeschreven dat de containers om alle componenten niet meer nodig zijn voor de Intersection Observer. De code kijkt nu naar alle child elements in de hoofdcontainer van de verhaal pagina's. Op al deze children wordt de Intersection Observer uitgevoerd zonder dat er containers nodig zijn.\n\nVakken toegepast:\n- WAFS\n- Browser technologies\n\nCode snippet:\n\n``` js\nfunction selectComponents() {\n\tconst allElements = document.querySelectorAll( '.container--main > *' )\n\n\tfunction enhancedAddClass( allElements ) {\n\t\tallElements.classList.add( 'detail__content' )\n\t}\n\n\tfunction perComponent() {\n\t\tallElements.forEach( enhancedAddClass )\n\t\tenhancedDetailInit()\n\t}\n\tperComponent()\n}\n```\n\nMeer context en code:\n\n[Link naar de bijbehoordende pull  request](https://github.com/moniac/meesterproef-scheepvaartmuseum/pull/89/files)\n\n### Code in functions\n\nWat ik nu voor het eerst goed heb gedaan, is goed en consistent gebruik gemaakt van functions. Waar mogelijk heb ik mijn JavaScript opgedeeld in functions met een naam, zodat deze functions later gebruik konden worden.\n\nVakken toegepast:\n- WAFS\n- Performance matters\n\nCode snippet:\n\n``` js\nfunction toggleToolButton() {\n\tconst addStoryButtons = document.querySelectorAll( '.button--regular--hidden' )\n\tconst plusButton = document.querySelector( '.button--show' )\n\tif ( !addStoryButtons || !plusButton ) return\n\tfunction toggleButtons( addStoryButtons ){\n\t\taddStoryButtons.classList.toggle( 'button--regular--hidden' )\n\t}\n\tfunction buttonEventlistener() {\n\t\taddStoryButtons.forEach( toggleButtons )\n\t\tif ( plusButton.classList.contains( 'button--show--rotate' ) ) {\n\t\t\tplusButton.classList.remove( 'button--show--rotate' )\n\t\t\tplusButton.classList.add( 'button--show' )\n\t\t} else {\n\t\t\tplusButton.classList.remove( 'button--show' )\n\t\t\tplusButton.classList.add( 'button--show--rotate' )\n\t\t}\n\t}\n\tplusButton.addEventListener( 'click', buttonEventlistener )\n}\nexport default toggleToolButton\n```\n### Uploadpagina video preview\n\nOm de gebruiker feedback te geven op de verhaaluploadpagina, hebben we van elk component\neen preview gemaakt. Wanneer de gebruiker een youtubelink in het invulveld heeft geplaatst en\nde focus uit het invuldveld verdwijnt, wordt een iframe element aangemaakt met de ingevulde link\nerin geplaatst.\n\nVakken toegepast:\n- Web design\n- WAFS\n\nCode snippet:\n\n``` js\nfunction videoPreview() {\n\tconst iframeLink = input.value\n\tif ( ! iframeLink.indexOf( 'https://youtube.com/' ) ) return\n\tif ( iframeLink.indexOf( '/watch?v=' ) ) {\n\t\tconst replacedLink = iframeLink.replace( '/watch?v=', '/embed/' )\n\t\tconst iframe = document.createElement( 'iframe' )\n\t\tiframe.classList.add( 'videoPreview' )\n\t\tiframe.src = replacedLink\n\t\tTweenMax.set( iframe, {autoAlpha: 0, y: -10} )\n\t\tevent.target.insertAdjacentElement( 'afterEnd', iframe )\n\t\tTweenMax.to( iframe, .4, {autoAlpha: 1, y: 0, clearProps: 'all' } )\n\n\t} else if ( iframeLink.indexOf( '/embed/' ) ) {\n\t\tconst iframe = document.createElement( 'iframe' )\n\t\tiframe.classList.add( 'videoPreview' )\n\t\tiframe.src = iframeLink\n\t\tTweenMax.set( iframe, {autoAlpha: 0, y: -10} )\n\t\tevent.target.insertAdjacentElement( 'afterEnd', iframe )\n\t\tTweenMax.to( iframe, .4, {autoAlpha: 1, y: 0, clearProps: 'all' } )\n\t}\n}\n```\n\n## Wat heb ik geleerd\n\n### Functions gebruiken\n\nMede dankzij de onderlinge afspraken die we binnen de groep hebben gemaakt over code conventions, heb ik bij elk stuk JavaScript de code in functions verdeeld. Dit maakt de code een stuk efficiënter. Je kunt alles hergebruiken. Elk JavaScript bestand per component moet naar het hoofdbestand worden geïmporteerd. Door vanaf het begin al met named functions te werken gaat dit super makkelijk.\n\n\nUit de index.js:\n\n``` js\nimport header from './components/header/header.js'\nimport {uploadForm, disableAllInputs} from './components/uploadForm/uploadForm.js'\nimport setUpMap from './components/map/map.js'\nimport toggleToolButton from './components/storyAddItemButton/storyAddItemButton.js'\nimport autocompleteFromApiInit from './components/lib/autocomplete.js'\nimport colorThief from './components/storyHighlight/storyHighlight.js'\nimport initReportComponent from './components/reportComponent/reportComponent.js'\nimport removeStoryInit from './components/adminStory/adminStory.js'\nimport { selectComponents } from './components/enhancedDetail/enhancedDetail.js'\nimport {optimizedResize, animateOnIntersect} from './components/lib/helpers.js'\nimport initSW from './service-worker-handler.js'\n\n\n( function IIFE () {\n\n\tif( !( document.documentElement.classList && document.querySelectorAll ) ) return\n\tanimateOnIntersect()\n\tsetUpMap()\n\tselectComponents()\n\theader()\n\tuploadForm()\n\tdisableAllInputs()\n\ttoggleToolButton()\n\toptimizedResize()\n\tautocompleteFromApiInit()\n\tcolorThief()\n\tinitReportComponent()\n\tremoveStoryInit()\n\tinitSW()\n} )()\n```\n\n### Inclusive design\n\nNa het gesprek met Joost heb ik veel meer gelet op semantiek. Ik heb opgelet bij de dingen die ik heb gemaakt dat ze niet alleen werken of awesome zijn, maar dat ze ook semantisch correct zijn. Bij elk component dat ik heb gemaakt, heb ik gecheckt en met de groep overlegd/gediscussieerd over de correcte HTML elementen voor de case. Ik heb dit project geleerd dat ik vanaf het begin moet nadenken over semantiek, accessibility en inclusiveness. Doe je het in één keer goed of besteed je er in ieder geval aandacht aan, dan scheelt dat je een hoop werk achteraf. Je maakt het web ook een betere plek voor iedereen.\n\n### SCSS\n\nTijdens het project hebben we gebruik gemaakt van SCSS. Dit heeft heel veel tijd gescheeld, omdat er gezamelijk een primary en secondary color bepaald werd en in een variable gezet werd. Net als bij de JavaScript kon er enorm veel code hergebruikt worden dankzij het gebruik van SCSS. SCSS heeft een heel duidelijke syntax, waardoor ik hele nette css ging schrijven. Dankzij het nesten van SCSS is de code ook heel overzichtelijk. Ik heb niet meer onnodig dubbele CSS geschreven, omdat ik het overzicht over selectors verloor, dankzij het overzichtelijke nesten dat SCSS aanbiedt.\n\nCode snippet van de verhaal blokjes op de homepagina en overzichtpagina:\n\n``` SCSS\n.stories {\n\t&__grid {\n\t\tdisplay: flex;\n\t\tflex-flow: row wrap;\n\t\tjustify-content: center;\n\t\talign-content: stretch;\n\n\t\t&--card {\n\t\t\tposition: relative;\n\t\t\twidth: 100%;\n\t\t\theight: 16rem;\n\t\t\tcolor: $secondary-color-text;\n\t\t\ttransition: transform 150ms ease-out;\n\t\t\tmargin: 2% 0;\n\t\t\t@include mq('medium') {\n\t\t\t\twidth: 48%;\n\n\t\t\t\t&:nth-child(odd) {\n\t\t\t\t\tmargin-right: 2%;\n\t\t\t\t}\n\n\t\t\t\t&:nth-child(even) {\n\t\t\t\t\tmargin-left: 2%;\n\t\t\t\t}\n\n\t\t\t\t&:hover {\n\t\t\t\t\t&-background {\n\t\t\t\t\t\ttransform: scale(1.05);\n\t\t\t\t\t}\n\t\t\t\t\ttransform: scale(1.05);\n\t\t\t\t}\n\t\t\t}\n\t\t\t@include mq('large') {\n\t\t\t\theight: 20rem;\n\t\t\t}\n\n\t\t\t&-background {\n\t\t\t\twidth: 70%;\n\t\t\t\theight: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 0;\n\t\t\t\tobject-fit: cover;\n\t\t\t\ttransition: transform 150ms ease-out;\n\t\t\t}\n\n\t\t\tarticle {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tpadding: 2rem;\n\t\t\t\ttext-shadow: 1px 1px 0 #000;\n\t\t\t\tbackground: linear-gradient(to right, black 30%, rgba(0, 0, 0, 0.7) 40%, rgba(0, 0, 0, 0.2) 80%, rgba(0, 0, 0, 0) 100%);\n\n\t\t\t\th2 {\n\t\t\t\t\tcolor: $secondary-color-text;\n\t\t\t\t\t@include mq('large') {\n\t\t\t\t\t\tmax-width: 60%;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tp {\n\t\t\t\t\tmax-width: 60%;\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tbottom: 2rem;\n\t\t\t\t\tmargin-bottom: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n## Conclusie meesterproef\n\nVoordat ik begon aan de meesterproef, was ik van plan om alleen te werken. Dat was ik gewend van de minor, omdat alle voorgaande projecten/vakken individueel waren. In het begin vond ik het lastig om mijn deel uit te kiezen en daar aan te gaan werken. Dankzij het opdelen van het geheel in componenten ging dit uiteindelijk een stuk makkelijker. Ook was het aan het begin enorm wennen aan de tooling en het feit dat je je aan de code- en naamgeving conventies moet houden binnen het team. Dit leidt er wel toe dat je goed nadenk over wat je codeert.\n\n## Contributors\n\n| Contributor  | Github URL                       |\n|--------------|:-------------------------------  |\n| Mees         | https://github.com/meesrutten       |\n| Mo           | https://github.com/moniac        |\n| Niels        | https://github.com/NielsFS       |\n| Jamie        | https://github.com/jajan20 |\n| Servin       | https://github.com/servinlp      |\n"}},{"name":"CMD-Performance-Accessibility","description":"CMD website improved performance and accessibility","url":"https://github.com/RobinFrugte97/CMD-Performance-Accessibility","homepageUrl":"https://robinfrugtewebproject2.herokuapp.com/","primaryLanguage":{"name":"CSS","color":"#563d7c"},"languages":{"nodes":[{"name":"JavaScript","color":"#f1e05a"},{"name":"CSS","color":"#563d7c"},{"name":"EJS","color":"#a91e50"}]},"openGraphImageUrl":"https://repository-images.githubusercontent.com/262994741/23a43200-a0ff-11eb-80fa-c653d15e755f","updatedAt":"2021-05-25T10:14:59Z","object":{"text":"# Project 2 @cmda-minor-web · 2019-2020\n\nIn dit project ga ik aan de slag met een bestaand project, om het op gebied van performance en accessibility te verbeteren. Ik heb gekozen voor de CMD website. Het is een Wordpress website, dus er valt veel aan te doen.\n\n\n## Install\n\n- Clone de repo: `git clone https://github.com/RobinFrugte97/project-2-1920.git`\n- Installeer benodigde packages: `npm install`\n- Run het project op poort 3000: `npm run start` of `node index.js`\n- Run het development script om te builden: `npm run dev`\n\n## [Livelink](https://robinfrugtewebproject2.herokuapp.com/)\n\n### Werkende pagina's:\n- [Homepagina](https://robinfrugtewebproject2.herokuapp.com/)\n- [Contactpagina](https://robinfrugtewebproject2.herokuapp.com/contact)\n\n## In deze readme:\n\n- [Onderzoek](#onderzoek)\n- [Todo lijst](#todo)\n- [Verbeteringen](#verbeteringen)\n    - [Html](#html)\n    - [Css](#css)\n    - [Contrast](#contrast)\n    - [Hover- & Focusstates](#states)\n    - [Gulp](#gulp)\n    - [Overige fixes](#overig)\n- [Conclusie](#conclusie)\n    - [Wat ik nog had willen doen](#wat-ik-nog-had-willen-doen)\n- [Packages](#packages)\n\n\n# <a name=\"onderzoek\"></a>Onderzoek\n\nOm te beginnen heb ik een audit gedraaid op de home-pagina van de [CMD website](https://www.cmd-amsterdam.nl/).\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/cmd-audit.png)\n\nDe CMD website komt slecht uit de test op het gebied van performance. Ook valt er nog het een en ander te verbeteren aan de accessibility. De website is in WordPress gemaakt en dus enorm bloated met allerlei onnodige styling elementen, zoals `div`'jes en `span`'s. Het formulier op de contact pagina bevat ook geen labels. Dit vormt ook een probleem voor screenreaders. \n\nVerder zijn er een aantal veel te grote images op de website. Zowel qua bestand grootte als dimensies. Dit zou opgelost kunnen worden door de images van te voren correct te schalen, vóór het uploaden naar Wordpress en/of te compressen.\n\n### Scripts\n\nEr zijn een heel aantal plugins aanwezig op de cmd website. Deze plugins worden door middel van Jquery en normale Javascript bestanden ingeladen. Namelijk 28(!). Sommige scripts zijn ontzettend overbodig, zoals de Woocommerce en andere shoppingcart scripts. Deze functionaliteit wordt namelijk helemaal niet gebruikt op de cmd website.\n\n# Lokale versie CMD website\n\nDe CMD website is een WordPress website. Het is niet eenvoudig om de website 1 op 1 over te zetten naar een lokale versie zonder toegang tot de wordpress omgeving en de backend. De lokale website ziet er iets anders uit, maar heeft erg vergelijkbare performances.\n\n## Werkende pagina's:\n\nOmdat het project één week duurt, heb ik beperkt tijd. Ik kies een paar pagina's uit om aan te werken. Dit zijn pagina's waar het één en ander aan te verbeteren valt op het gebied van performance en accessibility.\n\n- [Homepagina](https://robinfrugtewebproject2.herokuapp.com/)\n- [Contactpagina](https://robinfrugtewebproject2.herokuapp.com/contact)\n\n\n# <a name=\"todo\"></a>Todo's\n\n- ✅ Serverside renderen (Performance fix)\n- ✅ Minify de CSS en JS (Performance fix)\n- ✅ Maak alle html sematisch (Accessibility fix)\n- ✅ Verwijder nutteloze/niet gebruikte code (Performance/accessibility fix)\n- ✅ Meer pagina's uitwerken\n- ✅ Lazyloader voor images (Performance fix)\n- ✅ Minify JS (Performance fix)\n- Image compression (Performance fix)\n- Voeg caching toe (Performance fix)\n\n\n# <a name=\"verbeteringen\"></a>Verbeteringen\n\n## Remove non-sense\n\nWordpress voegt een boel non-sense toe aan de website. Zo zit er bijvoorbeeld een winkelwagen systeem in de website die verborgen is met css, maar tevoorschijn komt zodra je de website lokaal draait.\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/shoppingcart.png)\n\nDit heb ik verwijderd, met de bijbehorende css. Dit scheelt weer regels css en html en dat scheelt weer laadtijd.\n\n---\n\n## <a name=\"html\"></a>Rebuilding html\n\nIk heb de homepagina compleet opnieuw opgebouwd. De originiële versie is één grote onsemantische puinhoop. Een en al `div`, onduidelijke nesting en classes/attributes.\n\n### Oude html:\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/attributeoverload.png)\n\n\n\nIk heb de content van de pagina gepakt en deze vervolgens compleet semantisch en zo beknopt mogelijk herschreven. Alle ongebruikte code eruit, alle `div`'jes de prullenbak in.\n\n### Nieuwe html:\n\nDe nieuwe html is [hier](https://github.com/RobinFrugte97/project-2-1920/blob/master/views/index.ejs) te vinden\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/goodhtml.png)\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/semantichtml.png)\n\nDeze aanpassingen, samen met een geminifiede versie van de enorme berg css, zorgt voor een betere perfomance en een veel betere accessibility.\n\n- Hetzelfde is gedaan voor de contact pagina.\n\n### Form\n\nHet originele formulier op de contact pagina van de CMD website was een totale ramp op het gebied van accessibility.\n\nAlle inputs zitten verstopt in `<span>`'s, die weer in `<p>`'s zitten verstopt.\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/badform.png)\n\nZoals je kunt zien in de bovenstaande afbeelding, hebben de input velden ook geen fatsoenlijk label. Een screenreader kan hier weinig mee.\n\n#### Nieuw formulier:\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/goodform.png)\n\nHet nieuwe formulier is in zijn geheel bijna even groot als één input veld van de CMD website met dezelfde styling. Ook is het nieuwe formulier accessible voor screenreaders, omdat het semantisch is opgebouwd. \n\n---\n\n## <a name=\"css\"></a>Rebuilding CSS\n\nMet het omschrijven van de html heb ik tergelijk de CSS enorm ingekort en omgeschreven.\n\nDe CSS is van meer dan 21000 regels naar ~550 regels gegaan. \n\n### Oude css grootte en laadtijd:\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/oldcss.png)\n\n### Nieuwe css grootte en laadtijd:\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/newcss.png)\n\nDe CSS is opgedeeld in aparte css files om de developer experience te verbeteren. De CSS is [hier](https://github.com/RobinFrugte97/project-2-1920/tree/master/static/css) te vinden. Voor de gebruiker wordt de CSS uiteraard samengevoegd en geminified met behulp van Gulp.\n\n### Audit na opschonen CSS:\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/removedwpclutter.png)\n\n---\n\n## <a name=\"contrast\"></a>Contrast\n\nDe originele site maakt gebruik van een aantal verschillende kleuren in links of buttons. Sommige van deze kleurcombinaties hebben onvoldoende contrast volgens WCAG. Dit kan het voor slechtziende lastig maken om te lezen wat er in de link of button staat.\n\n### Oud button contrast:\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/originelebutton.png)\n\nIk heb gekozen om verder te gaan met de kleuren die de lokale versie biedt. De styling van de originele versie verschilt op sommige plekken van de online versie.\n\n### Nieuw button contrast:\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/goodrating.png)\n\n---\n\n## <a name=\"states\"></a>Focus- en hover-states\n\nDe CMD website heeft totaal geen focus-states en geen of hele slechte hover-states. Dit is een probleem voor mensen die hun muis niet kunnen gebruiken en de website met hun toetsenbord moeten navigeren. Wanneer je op de online versie van de site door de navigatie heen probeert te navigeren met je toetsenbord, gebeurt er niets. De gebruiker kan niet zien waar hij/zij gebleven is.\n\nDit heb ik opgelost door duidelijke focus-states toe te voegen aan alle bereikbare elementen op de website. Ik heb de eerder genoemde kleurcombinatie van de buttons gekozen, omdat het een goed contrast biedt. Voor de buttons heb ik deze kleuren omgekeerd op hover/focus.\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/buttonhover.png)\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/goodfocusstate.png)\n\n---\n\n## <a name=\"gulp\"></a>Gulp\n\nIk heb Gulp gebruikt om de performance van de website te verbeteren en de developer experience te verhogen. Het laat mij onder andere in aparte Javascript en css bestanden werken, en verkleint alle bestanden.\n\n### Gulp-concat\n\nPlakt alle bestanden van een opgegeven type vanuit een opgegeven locatie aan elkaar en maakt er één bestand van voor de browser.\n\n### Gulp-minify\n\nEen minifier voor Javascript bestanden. Zorgt voor kleinere bestanden, wat weer zorgt voor betere performance op de website.\n\n### Gulp-order\n\nBepaald de volgorde waarin de opgegeven bestanden aan elkaar geplakt worden. Soms is dat van belang, bijvoorbeeld bij css wanneer je een css reset hebt die je altijd bovenaan wilt hebben.\n\n### Gulp-clean-css\n\nEen minifier voor css bestanden. Zorgt voor kleinere bestanden, wat weer zorgt voor betere performance op de website.\n\n---\n\n## <a name=\"overig\"></a>Overige fixes\n\n### Lazyloader\n\nLazyloader toegevoegd om de website sneller in te laden. Alleen de zichtbare images worden geladen, de rest wordt pas geladen wanneer ze in beeld komen.\n\n### Doctype\n\nMissende `<!DOCTYPE html>` doctype toegevoegd, zodat de browser weet wat voor soort bestand verwacht kan worden. \n\n### Metadata\n\nMetadata toegevoegd voor de Search engine optimalisation.\n```\n<meta name=\"description\" content=\"Communication and Multimedia Design Amsterdam home pagina.\">\n```\n\n### Compression\n\nAlle html wordt als gzip gecompressed en afgeleverd bij de gebruiker. Ik maak gebruik van de `compression` node package.\n\n# <a name=\"conclusie\"></a>Conclusie\n### Oud:\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/cmd-audit.png)\n\n### Nieuw:\n\n![](https://raw.githubusercontent.com/RobinFrugte97/project-2-1920/master/ss/lastaudit.png)\n\nDit is de audit na alle aanpassingen in mijn versie van de CMD website. \n\n### Grote lijnen:\n\nWat heb ik gedaan om tot deze audit score te komen?\n\n- Serversided rendering.\n- Opschonen html & herschrijven html. Html semantisch maken.\n- Contrast buttons en links verbeterd, fatsoenlijke hover- en focusstates toegevoegd.\n- Verwijder alle overbodige css & herschrijven css.\n- Css minifyen. \n- Lazyloader toevoegen om de lading van images te verminderen.\n- Javascript minifyen.\n- Overige kleine fixes, zoals metatags en een doctype toevoegen om de Search engine optimalisatie te verbeteren.\n\n### Wat ik nog had willen doen:\n\n- Images serverside leveren. Zo had ik de images ook nog kunnen compressen. Dit zou voor een grote verbetering in performance zorgen. De images worden nu client-side opgehaald. Het zijn veel te grote afbeeldingen, zonde van de performance score.\n- Caching toevoegen.\n- Meer pagina's uitwerken. Er zijn nu twee pagina's uitgewerkt omwille van de deadline.\n\n\n---\n\n# <a name=\"packages\"></a>Packages\n\nNodejs packages die ik heb gebruikt om de performance and developer experience te verbeteren:\n\n- [Compression](https://www.npmjs.com/package/compression)\n- [Gulp](https://www.npmjs.com/package/gulp)\n- [Gulp-minify](https://www.npmjs.com/package/gulp-minify)\n- [Gulp-clean-css](https://www.npmjs.com/package/gulp-clean-css)\n- [Gulp-concat](https://www.npmjs.com/package/gulp-concat)\n- [Gulp-order](https://www.npmjs.com/package/gulp-order)\n"}},{"name":"FDND-task-aggregator","description":"A task aggregator made for FDND using Svelte and GraphQL","url":"https://github.com/RobinFrugte97/FDND-task-aggregator","homepageUrl":"https://tasks.fdnd.nl/","primaryLanguage":{"name":"Svelte","color":"#ff3e00"},"languages":{"nodes":[{"name":"JavaScript","color":"#f1e05a"},{"name":"CSS","color":"#563d7c"},{"name":"HTML","color":"#e34c26"},{"name":"Svelte","color":"#ff3e00"}]},"openGraphImageUrl":"https://repository-images.githubusercontent.com/359402703/9f07e280-a103-11eb-8177-2a75757324e0","updatedAt":"2021-04-19T18:11:06Z","object":{"text":"### Repo cloned from https://github.com/fdnd/task-aggregation for my portfolio website. All rights reserved to [FDND](https://fdnd.nl/).\n\n# task-aggregation\nAggregates all tasks and task descriptions from organisation fdnd-task (work in progress)\n\n## Description 🤓\n\n![](https://user-images.githubusercontent.com/27618252/102607935-66da9e00-4129-11eb-9523-618480764725.png)\n\n<!-- Edit this link with a new deployment after every new release or use your own deployment of choice ;) -->\n[Live link](https://tasks.fdnd.nl)\n\nThis project is a tool made for FDND-students. Its purpose is to gather all FDND-tasks and display them in a clear overview. \n\nThe overview of tasks, together with a couple of [features](#features), makes it easy to find specific tasks.\n\n## Table of Contents\n\n- [Titel](#titel)\n  * [Description](#description)\n  * [Features](#features)\n  * [Installation](#installation)\n  * [Use](#use)\n  * [To-Do list](#To-Do-list)\n  * [Sources](#sources)\n  * [License](#license)\n\n## Features\n\n### Svelte\n\nThis project is made in the framework [Svelte](https://www.svelte.dev). Svelte is different from other frameworks.\nWhere other frameworks like React and Vue do their work in the browser, Svelte does its work in the build-stage of the project. Svelte can be viewed as a compiler. Instead of using a virtual DOM like most frameworks, Svelte writes code to update the dom whenever the state of the application changes.\n\n### Searchbar\n\nYou can search for specific tasks based on a couple of things:\n- Task name\n- Sprint name\n- Semester name\n- Any tag\n\nResults are automatically displayed on user input.\n\n### Datalist\n\nWhile typing, the user is presented with a couple of suggestions using the html `<datalist>` element. The options inside the datalist are dynamicly calculated based on user input.\n\n### Sorting\n\nThe tasks can be sorted based on `task-order` and `alphabetical-order`.\n\nSorting based on difficulty and the sorting interface are work-in-progress.\n\nThe default sorting is based on `task-order`.\n\n## Installation\n\nClone this repository:\n```bash\n$ git clone https://github.com/fdnd/task-aggregation.git\n```\n\nNavigate to the folder:\n```bash\n$ cd task-aggregation\n```\n\nInstall all necessary packages and use rollup to build the project:\n```bash\n$ npm install\n$ npm run build\n```\n\nYou will need a `.env`-file to be able to fetch the task data.\n\nCreate one with the following (replace everything after the \"=\"):\n```\nGITHUB_PERSONAL_ACCESS_TOKEN=***Your personal access token from github.com/settings/tokens***\n```\n\n## Use\n\nMake sure all packages are installed and fire up the script using:\n```bash\n$ npm install\n$ npm start\n```\n\nOnce everything the project is running, navigate to http://localhost:5000/ in your favourite web browser.\n\n## To-Do list\n\n- [ ] Finishing up sorting.\n- [ ] Add a filtering function.\n- [ ] Store user data in a cookie.\n- [ ] Group tasks based on client.\n\n\n## Sources\n\n- [Svelte](https://svelte.dev)\n- [Svelte docs](https://svelte.dev/tutorial/)\n- [FDND-task github page](https://github.com/fdnd-task)\n- [FDND](https://fdnd.nl/)\n\n## License\n\n![GNU GPL V3](https://www.gnu.org/graphics/gplv3-127x51.png)\n\nThis work is licensed under [GNU GPLv3](./LICENSE).\n"}},{"name":"NMVW-objects-Japan","description":"This project is about a visualisation of NMVW museum objects within Japan. The visualisation is interactive with D3.","url":"https://github.com/RobinFrugte97/NMVW-objects-Japan","homepageUrl":"https://robinfrugte97.github.io/frontend-data/public/","primaryLanguage":{"name":"JavaScript","color":"#f1e05a"},"languages":{"nodes":[{"name":"HTML","color":"#e34c26"},{"name":"JavaScript","color":"#f1e05a"},{"name":"CSS","color":"#563d7c"}]},"openGraphImageUrl":"https://repository-images.githubusercontent.com/222409229/75e85180-a105-11eb-80bd-14c0aab10655","updatedAt":"2021-05-25T10:10:53Z","object":{"text":"# Livelink\n\n[Objecten van Japan](https://robinfrugte97.github.io/frontend-data/public/index.html)\n\n# Frontend data\n\nThe goal of this course is to build an interactive visualisation using D3.\nMore info can be found in my [wiki](https://github.com/RobinFrugte97/frontend-data/wiki).\n\n\n# Concept\n\nMy concept is about giving people a topographical visualisation of all the objects in Japan. The visualisation is not meant to accurately narrow down which object came from which region, but to give people a general vision.\n\n![](https://raw.githubusercontent.com/RobinFrugte97/frontend-data/master/src/images/fdHome.png)\n\n# D3 update pattern\n\nTo create an interactive visualisation, I make use of the update pattern within D3. I reuse existing DOM elements (created in D3) and load different data into them. I add additional elements if needed, and remove any leftover elements after loading new data to visualize. Read more about the D3 update pattern in my [wiki](https://github.com/RobinFrugte97/frontend-data/wiki/D3-Update-pattern).\n\n# Wiki\n\nMy progress, experiments, thoughts and code snippets can be found in my [wiki](https://github.com/RobinFrugte97/frontend-data/wiki). My wiki consists of a more detailed page about my [concept](https://github.com/RobinFrugte97/frontend-data/wiki/Concept). There is a page dedicated to [D3 update pattern](https://github.com/RobinFrugte97/frontend-data/wiki/D3-Update-pattern), where I describe what D3 update pattern is about and how I implemented it into my project. I also describe some of my [experiments](https://github.com/RobinFrugte97/frontend-data/wiki/Experiments) throughout the project. I have also practised with [cleaning data with the reduce method](https://github.com/RobinFrugte97/functional-programming/wiki/Datacleaning).\n\n## Get started\n\nDownload the project,\n\nLocate `public/index.html` and run it.\n\n\n## Data\n\nThe data I'm using comes from the API of [Netwerk digitaal erfgoed](https://www.netwerkdigitaalerfgoed.nl/), with my unique URL: https://api.data.netwerkdigitaalerfgoed.nl/datasets/ivo/NMVW/services/NMVW-08/sparql\n\n### NMVW data\n\nThe NMVW is a collective of multiple museums. They have a large [collection](http://collectie.wereldculturen.nl/) of items, ranging from Japanese prints from the Edo era to all sorts of clothes from Indonesia. Every object in the collection is documented on their [site](http://collectie.wereldculturen.nl/).\n\nMost items have at least:\n\n- A title or name\n- An image showing the object\n- A date from when the object originates\n- A location from where the object originates\n- A discription about the object\n\n\n### Used data\n\nI'm gathering data about all objects in Japan to then plot them on a map of Japan to see where in Japan most objects originate from.\n\nI'm getting the following data:\n- Japanese regions with objects\n- The geocoordinates of that region in longitude and latitude\n- The total amount of objects within that region\n- All underlying cities that have objects\n- The geocoordinates of that city in longitude and latitude\n- The amount of objects within that city\n\nThe SPARQL query I'm using to retrieve the aforementioned data for my application: \n\n```\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\tPREFIX dc: <http://purl.org/dc/elements/1.1/>\n\tPREFIX dct: <http://purl.org/dc/terms/>\n\tPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\tPREFIX edm: <http://www.europeana.eu/schemas/edm/>\n\tPREFIX foaf: <http://xmlns.com/foaf/0.1/>\n\tPREFIX wgs84: <http://www.w3.org/2003/01/geo/wgs84_pos#>\n\tPREFIX gn: <http://www.geonames.org/ontology#>\n\t\t\n\tSELECT ?provinceName ?cityName ?latCity ?longCity ?latProv ?longProv (COUNT(?cho)AS ?choCount) WHERE {\n\t\t\t# Follow the database relations to navigate down to city level in Japan.\n\t\t\t<https://hdl.handle.net/20.500.11840/termmaster6917> skos:narrower ?region .\n\t\t\t?region skos:narrower ?province .\n\t\t\t?province skos:prefLabel ?provinceName .\n\t\t\t?region skos:prefLabel ?regionName .\n\t\t\t?province skos:narrower ?city .\n\t\t\t?city skos:prefLabel ?cityName .\n\t\n\t\t\t# Get the geolocation of both the provinces and the cities in Japan.\n\t\t\t?province skos:exactMatch/wgs84:lat ?latProv .\n\t\t\t?province skos:exactMatch/wgs84:long ?longProv .    \t\n\t\t\t?city skos:exactMatch/wgs84:lat ?latCity .\n\t\t\t?city skos:exactMatch/wgs84:long ?longCity .\n\t\t\t\n\t\t\t# Get any object as long as it originates from one of the cities.\n\t\t\t?cho ?b ?c .\n\t\t\t?cho dct:spatial ?city .\n\t\t\t\n\t} ORDER BY ?provinceName\n```\n### Original data\n![](https://raw.githubusercontent.com/RobinFrugte97/frontend-data/master/src/images/dataResult.png)\n\n---\n## Acknowledgements\n\n- [NMVW](http://collectie.wereldculturen.nl/), for giving us the opportunity to work with their data,\n- [Kris Kuiper](Github.com/kriskuiper), for helping my formulate my data cleaning function.\n"}},{"name":"Minor-web-survey","description":"A progressively enhanced survey of the minor Everything Web","url":"https://github.com/RobinFrugte97/Minor-web-survey","homepageUrl":"https://minorenquetebt.herokuapp.com/","primaryLanguage":{"name":"EJS","color":"#a91e50"},"languages":{"nodes":[{"name":"JavaScript","color":"#f1e05a"},{"name":"CSS","color":"#563d7c"},{"name":"EJS","color":"#a91e50"}]},"openGraphImageUrl":"https://repository-images.githubusercontent.com/247064347/a9c47680-a107-11eb-8d2c-bd918c85fe7f","updatedAt":"2021-05-25T10:21:58Z","object":{"text":"## Browser tech\n\n### Opdracht 2\n\n### Enquete Minor Web\n\nVoor opdracht 2 ga ik een progressive enhanced enquete maken.\n\n### Prototype\n\n[Link naar het prototype](https://minorenquetebt.herokuapp.com/)\n\n### Install\n\nClone de repo naar je eigen omgeving\n\n`git clone https://github.com/RobinFrugte97/Browser-Technologies-2020`\n\nNavigeer naar de repo\n\n`cd Browser-Technologies-2020`\n\nInstalleer de dependencies\n\n`npm install`\n\nRun de applicatie\n\n`npm run dev`\n\n## Use case\n\nIk wil een enquete kunnen invullen over de minor Web Development, met verschillende antwoord mogelijkheden. Als ik de enquete niet afkrijg, wil ik later weer verder gaan met waar ik ben gebleven.\n\n## Basis functionaliteit\n\nWanneer de gebruiker Javascript en/of CSS uit heeft staan, of om wat voor reden dan ook niet binnen krijgt, werkt de basis functionaliteit in HTML.\n\nDe vragen worden server-side opgesteld en afgeleverd met Express en EJS. Vervolgens worden de antwoorden server-side opgeslagen. Wanneer de  gebruiker later verder wilt, kan er server-side worden gekeken of de gebruiker al voortgang heeft in de enquete en zoja verder gaan waar de gebruiker gebleven was.\n\nOok kan de gebruiker terug gaan naar de vorige vraag met de `terug` knop. De antwoorden van de vorige vraag worden dan weer terug gegeven aan de gebruiker, zodat de gebruiker weet wat hij/zij heeft ingevuld.\n\n## Eerste Feedback moment\n<details><summary>Feedback vragen</summary>\n1. Zou je mij feedback kunnen geven op de structuur/semantiek van mijn verschillende forms?\n- [Een radio form](https://github.com/RobinFrugte97/Browser-Technologies-2020/blob/master/views/questions/vraag1.ejs)\n- [Een textarea form](https://github.com/RobinFrugte97/Browser-Technologies-2020/blob/master/views/questions/vraag2.ejs)\n- [Een 'number' form](https://github.com/RobinFrugte97/Browser-Technologies-2020/blob/master/views/questions/vraag3.ejs)\n- [Een text form](https://github.com/RobinFrugte97/Browser-Technologies-2020/blob/master/views/gegevens.ejs)\n\n2. Zou je mij feedback kunnen geven op de Findings/feature detections in mijn readme? Is het bijvoorbeeld nodig om voorbeelden van wanneer het niet werkt toe te voegen? Of een caniuse.com link van iets dat niet werkt op een bepaalde browser?\n\n3. Zou je feedback kunnen geven op het prototype qua basis functies? Is er iets \"obvious\" voor de user experience dat ik over het hoofd zie?\n\n</details>\n\n## To-Do's\n\n<details><summary>To-do lijst</summary>\n\n- Ingevulde vragen weer ophalen als je op `Terug` klikt. [CHECK]\n- Required's aangeven, textarea uit de required's halen. [CHECK]\n- Extra input type. [CHECK]\n- Number naar range omzetten met JS. [CHECK]\n- JS form validation. [CHECK]\n\n[CSS selectors van PPK](https://quirksmode.org/css/selectors/)\n\n</details>\n\n## <a id=\"progressive-enhancement\"></a> Functional laag/Core functionaliteit\n\nDe functional laag is de kale HTML die in verbinding staat met de Node server. De functional laag geeft alle basis functionaliteiten en niet meer. Er is geen CSS en geen client-side Javascript. De gebruiker kan de enquete volledig invullen, alleen is het geen plezier voor het oog. De antwoorden worden nogsteeds opgeslagen en de gebruiker kan nogsteeds op een ander moment verder doorgaan met de enquete. De gebruiker kan nogsteeds naar een vorige vraag navigeren, waarbij de reeds ingevulde antwoorden nogsteeds worden teruggegeven aan de gebruiker.\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/functionallaag.png)\n\n\n## Usable laag\n\nDe Usabel laag bestaat uit CSS. Het is bedoeld om de gebruiker meer te geven dan kale HTML. De text is beter leesbaar dankzij css en de enquete is mobile-first opgebouwd. Er is een kleur toegevoegd, maar om wille van contrast maak ik gebruik van zwarte borders, text en buttons.\n\nDe enquete blijft prettig leesbaar doordat het formulier een maximale breedte heeft gekregen. Waar nodig is de content onder elkaar geplaatst in plaats van naast elkaar. Dit verschilt tussen mobiel en desktop.\n\nMobiel:\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/usablelaag.png)\n\n\nDesktop: \n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/usablelaagdesktop.png)\n\n## Pleasurable/enhanced laag\n\n#### Grote radio buttons\n\nIk maak gebruik van extra grote labels voor de radio buttons. Dit maakt mobiel gebruikt vele male prettiger dan dat je op een klein radio buttontje moet klikken, of op het label die er niet naar uitziet om op te klikken.\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/radiobuttons.png)\n\n#### Range slider\n\nAls enhancement heb ik range sliders toegevoegd aan alle nummer inputs. Op die manier hoef je niet meer te typen en kun je simpelweg op de slider selecteren welk getal je wilt kiezen. Je hebt gelijk feedback in het nummer input veld, want die verandert mee met de slider.\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/nummerslider.png)\n\n\n## <a id=\"feature-detection\"></a> Findings/Feature detection\n\n#### addEventListener\n\nOude versies van Internet Explorer ondersteunen `addEventListener` niet. Dit kan opgelost worden door te checken of `addEventListener` bestaat en zo niet een `attachEvent` fallback te schrijven.\n\n```javascript\nif (document.addEventListener) {\n    slider.addEventListener('input', function () {\n        nummer.value = slider.value\n    })\n    // Event 'change' voor IE.\n    slider.addEventListener('change', function () {\n        nummer.value = slider.value\n    })\n    if (nummer !== null) {\n        nummer.addEventListener('input', function () {\n            slider.value = nummer.value\n        })\n    }\n} else {\n    slider.attachEvent(\"oninput\", function () {\n        nummer.value = slider.value\n    })\n    // Event 'onchange' voor IE.\n    slider.attachEvent(\"onchange\", function () {\n        nummer.value = slider.value\n    })\n    if (nummer !== null) {\n        nummer.attachEvent(\"oninput\", function () {\n            slider.value = nummer.value\n        })\n    }\n} \n```\n\n#### Slider\n\nHet input veld moet worden aangepast wanneer je bezig bent met het verslepen van de slider. Om dit in zowel Chrome, Firefox en Internet Explorer te laten werken heb je verschillende soorten events nodig op de slider. \n\nChrome en Firefox willen graag het event `input` hebben, terwijl Internet Explorer graag het event `change` wilt hebben.\n\nOplossing:\n\n```javascript\nslider.addEventListener('input', function () {\n    nummer.value = slider.value\n})\n// Event 'change' voor IE.\nslider.addEventListener('change', function () {\n    nummer.value = slider.value\n})\n```\n\nIk zet meerdere eventlisteners op de slider. Zo kan Internet Explorer gebruik maken van `change`, terwijl Chrome en Firefox beide pakt. Het feit dat Chrome en Firefox beide pakt merk je niks van, omdat dezelfde functie in beide eventlisteners wordt uitgevoerd.\n\n#### Submit\n\n- `<input type=\"submit\">` kan niet buiten de bijbehorende form in Internet Explorer 11, ook als ze gelinkt zijn via een `form=\"\"`.\nHet idee was om de `submit` in de navigatie te plaatsen als zijnde een \"verder\" knop, naast de \"terug\" knop.\n\nHet idee:\n\n```html\n<form action=\"/vraag2\" id=\"vraag1\">...</form>\n<nav>\n    <ul>\n        <a href=\"/vraag1\">Terug</a>\n        <input form=\"vraag2\" type=\"submit\" value=\"Verder\">\n    </ul>\n</nav>\n```\n\nWerkt niet in IE 11, dus oplossing `<nav>` in de `<form>`:\n```html\n<form action=\"/vraag2\" id=\"vraag1\">\n...\n  <nav>\n      <ul>\n          <a href=\"/vraag1\">Terug</a>\n          <input form=\"vraag2\" type=\"submit\" value=\"Verder\">\n      </ul>\n  </nav>\n</form>\n```\n\n#### Radio button styling\n\n- De labels van een :checked radio input kunnen alleen gestyled worden als de label na de radio input staat, in plaats van eromheen.\n\nNormale input & label:\n\n```html\n<label>\n    Cijfer van 1 tot 10\n    <input type=\"number\" name=\"Slack cijfer\" min=\"1\" max=\"10\">\n</label>\n```\n\nRadio input alternatief:\n\n```html\n<input id=\"vraag3\" value=\"Leuk!\" type=\"radio\" name=\"vraag1\">\n<label for=\"vraag3\">\n    Leuk!\n</label>\n```\n\n#### Input type number\n\nBij een aantal vragen in de enquete vraag ik om een nummer. Dit deed ik eerst met een input type number `<input type=\"number\">`. \n\nIn het volgende [Gov.uk technology blog artikel](https://technology.blog.gov.uk/2020/02/24/why-the-gov-uk-design-system-team-changed-the-input-type-for-numbers/) wordt beschreven dat dit een heleboel usability problemen met zich mee brengt, waaronder veel screenreader problemen.\n\nDe oplossing is om een input type text met een `inputmode=\"numeric\"` en een `pattern=\"*regex*\"` te gebruiken. In de regex zeggen dat alleen nummer worden geaccepteerd. In het label van de input kun je gebruikers feedforward geven over wat er in de input verwacht/geaccepteerd wordt.\n\nOud number input voor een cijfer 1 t/m 10:\n\n```html\n<label>\n    Cijfer van 1 tot 10\n    <input type=\"number\" name=\"Minor cijfer\" min=\"1\" max=\"10\">\n</label>\n```\n\nNieuw input voor een cijfer 1 t/m 10:\n\n```html\n<label>\n    Cijfer van 1 tot 10\n    <input name=\"Minor cijfer\" type=\"text\" inputmode=\"numeric\" pattern=\"^(?:[1-9]|0[1-9]|10)$\">\n</label>\n```\n\n## CSS Fallback\n\n#### Display: inline-grid\n\nVoor de desktop versie van de enquete is wat extra styling nodig. Om de inputvelden met labels nog goed leesbaar te houden bijvoorbeeld. Daarvoor maak ik gebruik van `display: inline-grid`. Dit is niet ondersteund in Internet Explorer.\nDe fix in Internet Explorer is om de labels een `float: left` te geven. Ik check met `@supports (display: inline-grid)` of `display: inline-grid)` gesupport wordt. Zo ja, voer de code uit die binnen de `@supports` staat. Zo nee, negeer deze code en houd de oude float in stand.\n\n```css\nfieldset > label {\n        float: left;\n    }\n    \n@supports (display: inline-grid) {\n    fieldset {\n        display: inline-grid;\n    }\n\n    fieldset > label {\n        float: none;\n    }\n}\n```\n\n#### Display: flex\n\nIn mijn fieldset maak ik gebruik van `Display: flex` om de vragen netjes onder elkaar te zetten en ze in het midden uit te lijnen. Flex gebruik ik ook om buttons te positioneren. Wederom maak ik gebruik van `@supports` om te checken of de browser `Display: flex` ondersteunt.\n\n\n```css\n@supports (display: flex) {\n    fieldset {\n        display: flex;\n        flex-direction: column;\n        float: none;\n    }\n    fieldset > label {\n        float: none;\n    }\n}\n```\n\n## <a id=\"test-features\"></a> Test features\n\n### Getest in Chrome version 80 op Windows 10\n\n### Afbeeldingen\nDe site maakt geen gebruik van afbeeldingen. Er verandert niks aan de enquete.\n\n### Custom fonts\nIk maak gebruik van een custom font op de website. De kans bestaat dat om wat voor reden dan ook de font niet geladen kan worden.\n\nIk heb font fallbacks in mijn css: \n\n```css\nfont-family: Lato, Arial, 'Open Sans', sans-serif;\n```\n\nMet custom fonts: \n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/usablelaag.png)\n\nZonder custom fonts:\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/geenfonts.png)\n\n### JavaScript\nDe enquete werkt helemaal zonder Javascript, omdat Javascript alleen wordt gebruikt voor pleasurable enhancements.\n\nDe slider bij het kiezen van een cijfer zal dus niet ingeladen worden. Ook wordt de form feedback bij het gegevens scherm niet geupdatet.\n\nMet slider: \n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/nummerslider.png)\n\nZonder slider:\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/geenjs.png)\n\n\n### Kleur\nDe kleuren in de enquete hebben een goed contrast, waardoor de site goed werkt in bijvoorbeeld zwart-wit.\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/contrast.png)\n\n\n### Breedband internet\nDe enquete werkt precies hetzelfde, alleen wat trager.\n\n### Cookies\nIk maak op het moment geen gebruik van cookies in de website.\n\n\n### Local Storage\nIk maak geen gebruik van local storage in de website.\n\n### Muis / Trackpad\nEr zijn focus-states aangebracht. Je kunt door de enquete navigeren met je toetsenbord.\n\n\n## Devices en browsers voor het testen\n\n### Desktop Windows 10\n\n#### Chrome version 80\nPrimaire development browser. Werkt zoals het bedoeld is. Geheel responsive en styling is 100% perfect. De meeste bugs en styling issues zijn tijdens developement weggewerkt. Alle screenshots in de readme komen uit Chrome 80\n\n#### Firefox version 59.0\nPaar kleine styling onenigheden, zoals `width: fit-content;` dat niet werkt naar zin. Ook is de input type range anders gestylet dan in de andere browsers, omdat er andere prefixes zijn voor elke browser. De progress bar is ook iets anders gestylet weer door de prefixes.\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/firefox.png)\n\n#### Internet Explorer version 11\nInternet explorer is qua styling iets lastiger, omdat veel dingen of niet ondersteund zijn, of anders werken dan dat je verwacht. De progress bar is niet te stylen en de range input is erg lastig te stylen. Ook in IE werkt `width: fit-content;` niet, dus daar zitten wat styling onenigheden in. Ik werk in IE veel met `float` om de content netjes onder elkaar te krijgen. Resultaat is dat de content niet in het midden staat, maar voor de rest werkt alles in IE.\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/internetexplorer.png)\n\n### Samsung Galaxy S8 \n\n#### Chrome\nOp Chrome mobile werkt de enquete hetzelfde als Chrome desktop. De enquete is mobile-first ontworpen, dus er zijn geen verrassingen.\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/mobile.png)\n\n# Conclusie\n\n## Core functionaliteit \nWanneer de gebruiker Javascript en/of CSS uit heeft staan, of om wat voor reden dan ook niet binnen krijgt, werkt de basis functionaliteit in HTML. De enquete kan ten aller tijden worden ingevuld.\n\nDe vragen worden server-side opgesteld en afgeleverd met Express en EJS. Vervolgens worden de antwoorden server-side opgeslagen. Wanneer de  gebruiker later verder wilt, kan er server-side worden gekeken of de gebruiker al voortgang heeft in de enquete en zoja verder gaan waar de gebruiker gebleven was.\n\nOok kan de gebruiker terug gaan naar de vorige vraag met de `terug` knop. De antwoorden van de vorige vraag worden dan weer terug gegeven aan de gebruiker, zodat de gebruiker weet wat hij/zij heeft ingevuld.\n\n## Toegankelijkheid\nZie het feature onderzoek [hierboven](#test-features).\n\n## Probleemdefinitie en oplossing\nZie de feature detection/findings documentatie [hierboven](#feature-detection).\n\n## Progressive enhancement \nProgressive enhancement is wanneer je vanuit de basis een website 'enhancet' met extraatjes. Je gaat stapje voor stapje door een aantal lagen heen. Eerst moet het functioneel zijn. Werkt de basis van de website helemaal en altijd? Ga dan naar de bruikbare laag. Hier maak je de website bruikbaarder, door bijvoorbeeld custom css fonts toe te voegen en de website beter bruikbaar te maken door de font size te vergroten. Daarna ga je door naar pleasurable. Deze laag bestaat uit dingen die echt extra zijn en voor een soort 'wow' factor zorgen in je website. Denk aan Javascript en CSS enhancements. De site moet werken als een van de lagen wegvalt.\n\n## Progressive Enhancement in project\nZie [Progessive Enhancement](#progressive-enhancement).\n\n## Feature detection\nFeature detection is wanneer je eerst kijkt of een feature ondersteund wordt in de browser of omgeving, en daarna pas de feature toepast. Ook kan je feature detection gebruiken om fallbacks te schrijven in Javascript en CSS\n\n## Feature Detection  in project\nZie [Feature detection/findings](#feature-detection).\n\n\n\n## Wireflow\n<details><summary>Wireflow</summary>\n\n\nIk schets eerst een wireflow en/of breakdown-schets met hoe de demo moet gaan werken en hoe het eruit komt te zien.\n\nHet idee is dat de student voor het invullen van de enquete hun studentnummer invult, zodat de enquete later verder ingevuld kan worden.\n\n#### Wireflow\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/wireflow.png)\n\n#### Start scherm\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/wireflow1.png)\n\n#### Gegevens scherm\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/wireflow2.png)\n\n#### Radio button scherm\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/wireflow3.png)\n\n#### Textbox scherm\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/wireflow4.png)\n\n#### Slider scherm\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/wireflow5.png)\n\n#### Later verder notificatie scherm\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/wireflow6.png)\n\n#### Verder gaan scherm\n\n![](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/wireflow7.png)\n\n</details>\n\n## Opdracht 1\n\n<details><summary>Opdracht 1</summary>\n\n### WAFS site\nMijn Web App From Scratch site gaat over Marvel superheroes. Er is een overzicht van characters met elk een detail pagina. Op een detail pagina heb je een grotere afbeelding en kun je zien in welke comic het desbetreffende character in voor komt.\n\n[Link naar prototype](RobinFrugte97.github.io/wafs/app/)\n\n### De 8 test features\n\n1. Afbeeldingen uit\n2. Custom fonts uit\n3. Geen Javascript\n4. Kleur uit\n5. Breedband internet\n6. Cookies\n7. Local Storage\n8. Muis/Trackpad\n\n### Getest in Chrome version 80 op Windows 8.1\n\n\n### Afbeeldingen\nDe site maakt veel gebruik van afbeeldingen, zowel op de hoofdpagina als op de detailpaginas. Ik krijg alle afbeeldingen in een zelf gekozen grootte terug van de Marvel API. Elke afbeelding die een superhero afbeeldt is een JPG. Het logo is een PNG afbeelding.\n\nProblemen:\n1. De images hebben geen `alt`. Als de afbeeldingen om wat voor reden dan ook niet laden, dan weet je niet waar het om gaat.\n2. De site bestaat grotendeels uit afbeeldingen. Voor blinden of slechtzienden is de site dus praktisch onbruikbaar.\n\nOplossingen:\n1. Per image wordt nu naast een `<img>` src ook een `<img>` alt gerendert.\n  Code voor:\n  ```Javascript\n  thumbnail: {\n    src: function(){\n      return this.thumbnail\n    }\n  }\n  ```\n  Code na:\n  ```Javascript\n  thumbnail: {\n    src: function(){\n      return this.thumbnail\n    },\n    alt: function(){\n      return \"Thumbnail afbeelding van ${this.character}\"\n    }\n  }\n  ```\n2. Per image wordt nu ook een `<img>` title gerendert, met daarin de naam van de desbetreffende superhero.  \n\n\n### Custom fonts\nIk maak gebruik van een custom font op de website. De kans bestaat dat om wat voor reden dan ook de font niet geladen kan worden.\n\nProblemen:\n1. Er is geen geteste fallback font.\n\nOplossingen:\n1. Helvetica toegevoegd als fallback font. Als fallback daarop een sans-serif font.\n`font-family: americanCaptain, helvetica, sans-serif;`\n\n\n### JavaScript\nDe website werkt niet zonder JavaScript. Zonder JavaScript zul je niet verder komen dan de loading spinner.\n\nProblemen:\n1. De website werkt niet zonder JavaScript. De data wordt niet opgehaald en er wordt geen pagina gerendert.\n\nOplossingen:\n1. De site zou aan de server kant gerendert kunnen worden. Bij PWA wordt daar aan gewerkt\n\n\n### Kleur\nDe site heeft een aantal verschillende kleuren, dankzij de vele verschillende afbeeldingen en kleurrijke characters.\n\nDe site is goed te gebruiken in zwart-wit.\n\n![Zwart-wit](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/blackandwhite2.png)\n\n\n### Screenreader\nIk heb de site getest met een screenreader. De gebruikte screenreader heet [NVDA](https://www.nvaccess.org/). De reader leest per character de afbeeldingen en de naam van het character.\n\n![reader](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/screenreader.png)\n\n### Breedband internet\nDe site is bijna geheel gebaseerd rond de Marvel API.\nDe API call die naar alle characters wordt gemaakt duurt op langzaam 3G netwerk minimaal 10 seconden. Vervolgens moeten alle afbeeldingen geladen worden. Per afbeelding duurt het 2 tot 5 seconden voor het geladen is.\n\nProblemen:\n1. Op een langzaam 3G netwerk duurt het erg lang om de site te laden. Dit komt mede door de vele afbeeldingen die geladen moeten worden.\n2. Er wordt een groot aantal afbeeldingen binnen gehaald. Dit kan problemen veroorzaken bij iemand met een trage internet snelheid, zoals een langzame 3G verbinding op hun telefoon.\n\nOplossingen:\n1. De Marvel API biedt verschillende afbeelding formaten. Je zou binnen JavaScript kunnen checken of de afbeeldingen er te lang over doen en vervolgens doorgaan met een kleiner formaat afbeeldingen.\n2. De API call naar Marvel is eenvoudig te limiten. Zo is het aantal characters dat opgehaald wordt beperkt.\n\n### Cookies\nIk maak op het moment geen gebruik van cookies in de website.\n\n\n### Local Storage\nIk maak geen gebruik van local storage in de website.\n\nProblemen:\n1. Omdat er geen gebruik wordt gemaakt van local storage, moet de gebruiker elke keer de afbeeldingen en andere content opnieuw downloaden. Dit kan met een trage verbinding problemen opleveren.\n\nOplossingen:\n1. De images zouden in de local storage opgeslagen kunnen worden voor mensen die vaker op de site terug komen, in het geval dat de gebruiker langzaam internet heeft.\n\n\n### Muis / Trackpad\nIk had tijdens het maken van de app bij Web App From Scratch geen aandacht besteed aan hoe de site te bedienen is zonder muis.\n\nProblemen:\n1. Geen focus-states om door de website te navigeren met een toetsenbord.\n\nOplossingen:\n1. Duidelijke focus-states toegevoegd aan alle elementen in de site die een functionaliteit hebben.\n\n![Focusstate](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/focus-state.png)\n\n\n## Devices en browsers voor het testen\n\n### ASUS Windows 8.1 laptop\n\n#### Firefox version 59.0\n![firefoxscreenshot](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/BTFF.png)\n- In Firefox werkt de site goed, alleen worden missende plaatjes op een andere manier getoond.\n\n#### Internet Explorer version 11\n![internetexplorerscreenshot](https://raw.githubusercontent.com/RobinFrugte97/Browser-Technologies-2020/master/screenshots/BTIE11.png)\n- De website komt niet voobij de loading state in Internet Explorer. Dit komt omdat de JavaScript kapot gaat. Internet Explorer ondersteunt geen Fetch. Dit is de manier \nwaarmee ik de API calls doe. XMLHttpRequests worden wel ondersteund door Internet Explorer.\n\n### Microsoft Surface (Windows 8.1)\n#### Internet Explorer version 11\n\n- JS fetch wordt niet ondersteund. De api call wordt nooit gedaan. Er is dus geen content.\n    - De oplossing zou kunnen zijn: Een fallback schrijven in de Javascript naar XMLHttpRequest. Deze manier van api call wordt wel door IE 11 ondersteund.\n- De styling gaat kapot, omdat de javascript niet voorbij de loader komt.\n\n\n## NOTES\n\nsupport detection & browsers\n\nAls je iets wilt gebruiken, kun je in css en js kijken of het gesupport wordt.\n\nCSS: @supports\n\n```css\n@supports (display: grid) {\n  ...\n}\n\n@supports not (display: grid) {\n  ...\n}\n```\n\nJS: if (*check of er een waarde uit hetgene komt dat je wilt checken*)\n\nIn oude browsers:\n```js\nif (window.localStorage) {\n  localStorage.setItem(etc)\n}\n```\n\nKan ook:\n```js\nif (localStorage) {\n  localStorage.setItem(etc)\n}\n```\n\nRender blocking\n-link naar css of js, dan stopt html parser.\nzet css maar boven in je pagina, accepteer dat het even blockt\n\ndefer vs async\n\ndo it now:\n<script src>\n\nDo it later:\n<script defer src>\n\nI dont care when, just not now:\n<script async src>\n\n\nTesten:\n\nblink \nwebkit safari\ngecko\n\n</details>\n"}},{"name":"Portfolio","description":"My personal website showcasing some of my work. Build with Svelte using data from the github API retrieved with GraphQL.","url":"https://github.com/RobinFrugte97/Portfolio","homepageUrl":"https://robinfrugte.dev","primaryLanguage":{"name":"Svelte","color":"#ff3e00"},"languages":{"nodes":[{"name":"JavaScript","color":"#f1e05a"},{"name":"CSS","color":"#563d7c"},{"name":"HTML","color":"#e34c26"},{"name":"Svelte","color":"#ff3e00"}]},"openGraphImageUrl":"https://repository-images.githubusercontent.com/371300578/4f88b380-bf06-11eb-9e3b-e0d8f4bf4cf0","updatedAt":"2021-06-07T10:52:00Z","object":{"text":"# robinfrugte.dev\n\nThis is my own personal portfolio website where is show off some of the work I'm proud of.\n\n![](https://repository-images.githubusercontent.com/371300578/4f88b380-bf06-11eb-9e3b-e0d8f4bf4cf0)\n\n[robinfrugte.dev](robinfrugte.dev)\n\n# To-do\n\n- [ x ] Add routing\n- [ x ] Flesh out project detail pages\n    - [ x ] Check GraphQL query to see if I can add more information \n- [ x ] Make site responsive\n- [ x ] Style desktop navigation\n- [ o ] Add about me page\n    - [  ] Add a skillset section\n- [ x ] Add more projects\n- [ o ] More Svelte experimenting\n\n# Sources\n\n- [Svelte](https://svelte.dev/)\n- [Svelte docs](https://svelte.dev/tutorial)\n- [svelte-spa-router](https://github.com/ItalyPaleAle/svelte-spa-router)\nA hash-based router package that allows you to route between svelte component seemlessly.\n\n- [marked](https://www.npmjs.com/package/marked)\nA package that parses markdown to html.\n- [GraphQL](https://graphql.org/)"}}]